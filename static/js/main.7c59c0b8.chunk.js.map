{"version":3,"sources":["Display.js","Button.js","ButtonContainers.js","Calculator.js","index.js"],"names":["Display","props","id","input","Button","onClick","handleClick","value","ButtonContainers","buttons","buttonsData","map","data","key","Calculator","event","content","target","innerHTML","nextInput","state","setState","calculate","handleDecimal","handleMinus","handleOperators","handleDefault","valuesArray","split","operatorsRegex","lastValueLength","length","match","mathExpressionRegex","test","charAt","replace","expression","total","values","operatorsArray","shift","pop","operatorsAmount","i","splice","index","findIndex","Number","toFixed","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c59c0b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Display(props){\r\n    return(\r\n      <div id=\"display\">\r\n        <h3>{props.input}</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nfunction Button(props){\r\n    return(\r\n      <button onClick={props.handleClick} id={props.id}>{props.value}</button>\r\n    )\r\n  }\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\nfunction ButtonContainers(props){\r\n    const buttons = props.buttonsData.map(data => (<Button handleClick={props.handleClick} key={data.id} id={data.id} value={data.value}/>));\r\n    return(\r\n      <div id=\"button-container\">     \r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ButtonContainers;","import React from 'react';\r\nimport Display from './Display';\r\nimport ButtonContainer from './ButtonContainers';\r\n\r\n\r\nclass Calculator extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      input: '0',\r\n      operatorsRegex: /[-x/+]/,\r\n      mathExpressionRegex: /(?!(00))(-?\\d+\\.?\\d*([\\/x+-]-?(?!(00)))?)*/,\r\n      buttonsData: [\r\n        { id: 'clear', value: 'A/C'},\r\n        { id: 'add', value: '+'},\r\n        { id: 'subtract', value: '-'},\r\n        { id: 'one', value: '1'},\r\n        { id: 'two', value: '2'},\r\n        { id: 'three', value: '3'},\r\n        { id: 'multiply', value: 'x'},\r\n        { id: 'four', value: '4'},\r\n        { id: 'five', value: '5'},\r\n        { id: 'six', value: '6'},\r\n        { id: 'divide', value: '/'},\r\n        { id: 'seven', value: '7'},\r\n        { id: 'eight', value: '8'},\r\n        { id: 'nine', value: '9'},\r\n        { id: 'equals', value: '='},\r\n        { id: 'decimal', value: '.'},\r\n        { id: 'zero', value: '0'}   \r\n      ]\r\n    }\r\n  }\r\n  handleClick = (event) =>{\r\n    const content = event.target.innerHTML;\r\n    let nextInput = this.state.input + content;\r\n    switch(event.target.innerHTML){\r\n      case 'A/C': \r\n        this.setState({input: '0'})\r\n        break;\r\n      case '=':\r\n        this.setState(state =>(this.calculate(state.input)))\r\n        break;\r\n      case '.':\r\n        this.handleDecimal(nextInput, content)\r\n        break;\r\n      case '-':\r\n        this.handleMinus(nextInput, content) \r\n        break;\r\n       case 'x':\r\n       case '/':\r\n       case '+':\r\n        this.handleOperators(nextInput, content) \r\n        break;\r\n      default:\r\n        this.handleDefault(nextInput, content) \r\n    } \r\n  }\r\n  \r\n  handleDefault = (nextInput, content) =>{\r\n    let valuesArray = nextInput.split(this.state.operatorsRegex)\r\n    let lastValueLength = valuesArray[valuesArray.length-1].length\r\n    if(this.state.input.length===1 && this.state.input==='0'){\r\n      this.setState(state =>{\r\n        return ({input: content})\r\n      })\r\n    }\r\n    else\r\n    {\r\n      if(nextInput.match(this.state.mathExpressionRegex)[0]===nextInput && lastValueLength < 20){\r\n        this.setState(state =>{\r\n          return ({input: state.input+content})\r\n         })\r\n      } \r\n    }\r\n  }\r\n  \r\n  handleOperators = (nextInput, content) =>{\r\n    \r\n    if(this.state.operatorsRegex.test(nextInput.charAt(nextInput.length-2))){      \r\n      if(this.state.operatorsRegex.test(nextInput.charAt(nextInput.length-3))){\r\n        this.setState(state =>{\r\n          let newInput = state.input.replace(/..$/, content)\r\n          return ({input: newInput})\r\n        })\r\n      }\r\n      else\r\n      {\r\n        this.setState(state =>{\r\n          let newInput = state.input.replace(/.$/, content)\r\n          return ({input: newInput})\r\n        })\r\n      }\r\n          \r\n    }\r\n    else\r\n    {\r\n      if(nextInput.match(this.state.mathExpressionRegex)[0]===nextInput){\r\n        this.setState(state =>{\r\n          return ({input: state.input+content})\r\n        })\r\n      } \r\n    }\r\n  }\r\n  \r\n  handleMinus = (nextInput, content) =>{ \r\n    if((this.state.input.length===1 && this.state.input==='0') || this.state.input.length === 0){\r\n      this.setState(state =>{\r\n        return ({input: content})\r\n      })\r\n    }\r\n    else\r\n    {\r\n      if(nextInput.match(this.state.mathExpressionRegex)[0]===nextInput \r\n         || !(this.state.operatorsRegex.test(nextInput.charAt(nextInput.length-2)) \r\n         && this.state.operatorsRegex.test(nextInput.charAt(nextInput.length-1)))\r\n         )\r\n      {\r\n        this.setState(state =>{\r\n          return ({input: state.input+content})\r\n        })\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleDecimal = (nextInput, content) =>{\r\n    if(this.state.operatorsRegex.test(nextInput.charAt(nextInput.length-2)) && content==='.'){\r\n      this.setState(state =>{\r\n        return ({input: state.input+'0.'})\r\n      })\r\n    }\r\n    else if(nextInput.match(this.state.mathExpressionRegex)[0]===nextInput){\r\n      this.setState(state =>{\r\n        return ({input: state.input+content})\r\n      })\r\n    }\r\n  }\r\n  \r\n  calculate =(expression) =>{\r\n    if(typeof expression === 'string' && (!this.state.operatorsRegex.test(expression.charAt(expression.length-1)))){\r\n      \r\n      const valuesRegex = /\\d+\\.?\\d*/;     \r\n      let values = expression.split(this.state.operatorsRegex);\r\n      let operatorsArray = expression.split(valuesRegex);\r\n      operatorsArray.shift()\r\n      if(operatorsArray[operatorsArray.length-1]===''){ operatorsArray.pop() }\r\n      let total;\r\n      let operatorsAmount = operatorsArray.length;\r\n      if(operatorsArray.length > 0 && values.length > 0){\r\n        for(let i = 0; i < values.length; i++){\r\n          if(values[i]===''){\r\n            values[i+1]*=-1;\r\n            values.splice(i, 1);\r\n          }\r\n        }\r\n        for(let i = 0; i < operatorsAmount; i++){\r\n          if(operatorsArray[i].length>1){\r\n            operatorsArray[i]=operatorsArray[i][0];\r\n          }\r\n        }\r\n\r\n        for(let i = 0; i < operatorsAmount; i++){\r\n          let index = operatorsArray.findIndex(value => /[x/]/.test(value));\r\n          if(index<0){index = operatorsArray.findIndex(value => /[-+]/.test(value));}\r\n          switch(operatorsArray[index]){\r\n            case 'x':\r\n             total = Number(values[index])*Number(values[index+1])\r\n             operatorsArray.splice(index, 1);\r\n             values.splice(index, 2, total);\r\n             break;\r\n            case '/':\r\n             total = Number(values[index])/Number(values[index+1])\r\n             operatorsArray.splice(index, 1);\r\n             values.splice(index, 2, total);\r\n             break;\r\n            case '-':\r\n             total = Number(values[index])-Number(values[index+1])\r\n             operatorsArray.splice(index, 1);\r\n             values.splice(index, 2, total);\r\n             break;\r\n            case '+':\r\n             total = Number(values[index])+Number(values[index+1])\r\n             operatorsArray.splice(index, 1);\r\n             values.splice(index, 2, total);\r\n             break; \r\n          }\r\n        }\r\n        return({input: Number(total.toFixed(4))})\r\n      }\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    const {input, buttonsData} = this.state\r\n    return(\r\n      <div id=\"calculator\">\r\n        <Display input={input}/>\r\n        <ButtonContainer buttonsData={buttonsData} handleClick={this.handleClick}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator'\nimport './index.scss';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}